{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Baburaj\\\\hyundaidashboard\\\\src\\\\components\\\\select_dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { trackPromise } from 'react-promise-tracker';\nimport $ from 'jquery';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport axios from 'axios';\nimport { Badge, Button, Card, Navbar, Nav, Table, Container, Row, Col, Form, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst customStyles = {\n  option: (provided, state) => ({ ...provided,\n    borderBottom: '2px dotted green',\n    color: state.isSelected ? 'yellow' : 'black',\n    backgroundColor: state.isSelected ? 'green' : 'white'\n  }),\n  control: provided => ({ ...provided,\n    marginTop: \"5%\"\n  })\n};\nconst options1 = [{\n  value: 'National',\n  label: 'National'\n}, {\n  value: 'Region',\n  label: 'Region'\n}, {\n  value: 'Dealer',\n  label: 'Dealer'\n}];\n\nfunction Dropdown() {\n  _s();\n\n  const [showForm, setShowForm] = useState('false');\n  const [isLoading, setIsLoading] = useState(false);\n  const [resp, setGitData] = useState({\n    data: null,\n    repos: null\n  });\n  const [selectValue, setSelectValue] = useState('');\n  let comp, comp1;\n\n  const handleAddrTypeChange = e => {\n    setShowForm(e.value);\n  };\n\n  const handleAddrTypeChange1 = e => {\n    setSelectValue(e.value);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const respGlobal = await axios(`https://kmi-salessatisfaction.apprikart.com/secured_api/dashboard_api/get_dealer_list/?username=login1&permission=[%22KIA%22]&start_date=01/01/2021&end_date=30/01/2021&report_type=DCSI`);\n      const respRepos = await axios(`https://kmi-salessatisfaction.apprikart.com/secured_api/dashboard_api/get_region_list/?username=login1&permission=[%22KIA%22]&start_date=01/01/2021&end_date=30/01/2021&report_type=DCSI`);\n      setGitData({\n        data: respGlobal.data,\n        repos: respRepos.data\n      });\n      setIsLoading(false);\n    };\n\n    trackPromise(fetchData());\n  }, []);\n\n  if (showForm == 'Region') {\n    comp = /*#__PURE__*/_jsxDEV(Select, {\n      className: \"col-md-2 col-offset-4\",\n      name: \"anyCustomName\",\n      styles: customStyles,\n      options: resp.repos,\n      onChange: e => handleAddrTypeChange1(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  } else if (showForm == 'Dealer') {\n    comp1 = /*#__PURE__*/_jsxDEV(Select, {\n      className: \"col-md-2 col-offset-4\",\n      styles: customStyles,\n      options: resp.data,\n      defaultValue: resp.data[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n  const hiddenInputValue = $(\"input[name='anyCustomName']\").val();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [hiddenInputValue, /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          margin: '1px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n          styles: customStyles,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"someRandomID\",\n            className: \"col-sm-2 col-offset-4\",\n            style: {\n              height: '40px',\n              margin: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          className: \"col-sm-2 col-offset-4\",\n          styles: customStyles,\n          defaultValue: {\n            value: 'National',\n            label: 'National'\n          },\n          options: options1,\n          onChange: e => handleAddrTypeChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), comp, comp1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dropdown, \"GuB/dGVEPgx6mh+DyZC/rXkv6aM=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["C:/Users/Baburaj/hyundaidashboard/src/components/select_dropdown.js"],"names":["React","useState","useEffect","Select","trackPromise","$","DateRangePicker","axios","Badge","Button","Card","Navbar","Nav","Table","Container","Row","Col","Form","OverlayTrigger","Tooltip","customStyles","option","provided","state","borderBottom","color","isSelected","backgroundColor","control","marginTop","options1","value","label","Dropdown","showForm","setShowForm","isLoading","setIsLoading","resp","setGitData","data","repos","selectValue","setSelectValue","comp","comp1","handleAddrTypeChange","e","handleAddrTypeChange1","fetchData","respGlobal","respRepos","hiddenInputValue","val","margin","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,MAJJ,EAKIC,GALJ,EAMIC,KANJ,EAOIC,SAPJ,EAQIC,GARJ,EASIC,GATJ,EAUIC,IAVJ,EAWIC,cAXJ,EAYIC,OAZJ,QAaS,iBAbT;;;AAmBE,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAACC,QAAD,EAAWC,KAAX,MAAsB,EAC5B,GAAGD,QADyB;AAE5BE,IAAAA,YAAY,EAAE,kBAFc;AAG5BC,IAAAA,KAAK,EAAEF,KAAK,CAACG,UAAN,GAAmB,QAAnB,GAA8B,OAHT;AAI5BC,IAAAA,eAAe,EAAEJ,KAAK,CAACG,UAAN,GAAmB,OAAnB,GAA6B;AAJlB,GAAtB,CADW;AAOnBE,EAAAA,OAAO,EAAGN,QAAD,KAAe,EACtB,GAAGA,QADmB;AAEtBO,IAAAA,SAAS,EAAE;AAFW,GAAf;AAPU,CAArB;AAeA,MAAMC,QAAQ,GAAG,CACf;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CADe,EAEf;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAFe,EAGf;AAAED,EAAAA,KAAK,EAAE,QAAT;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHe,CAAjB;;AAOA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlC,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACmC,SAAD,EAAYC,YAAZ,IAA4BpC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqC,IAAD,EAAOC,UAAP,IAAqBtC,QAAQ,CAAC;AAAEuC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAAD,CAAnC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1C,QAAQ,CAAC,EAAD,CAA9C;AAEA,MAAI2C,IAAJ,EAAWC,KAAX;;AAEA,QAAMC,oBAAoB,GAAIC,CAAD,IAC/B;AACEZ,IAAAA,WAAW,CAAEY,CAAC,CAAChB,KAAJ,CAAX;AAED,GAJC;;AAMF,QAAMiB,qBAAqB,GAAID,CAAD,IAC9B;AACEJ,IAAAA,cAAc,CAAEI,CAAC,CAAChB,KAAJ,CAAd;AAED,GAJD;;AAOA7B,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAM+C,SAAS,GAAG,YAAY;AAE5BZ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,YAAMa,UAAU,GAAG,MAAM3C,KAAK,CAC3B,0LAD2B,CAA9B;AAGA,YAAM4C,SAAS,GAAG,MAAM5C,KAAK,CAC1B,0LAD0B,CAA7B;AAIAgC,MAAAA,UAAU,CAAC;AAAEC,QAAAA,IAAI,EAAEU,UAAU,CAACV,IAAnB;AAAyBC,QAAAA,KAAK,EAAEU,SAAS,CAACX;AAA1C,OAAD,CAAV;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,KAdD;;AAkBAjC,IAAAA,YAAY,CACV6C,SAAS,EADC,CAAZ;AAIC,GAxBM,EAwBJ,EAxBI,CAAT;;AA4BA,MAAIf,QAAQ,IAAI,QAAhB,EAA0B;AAGxBU,IAAAA,IAAI,gBAAI,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AAA0C,MAAA,IAAI,EAAC,eAA/C;AAA+D,MAAA,MAAM,EAAKxB,YAA1E;AAAyF,MAAA,OAAO,EAAIkB,IAAI,CAACG,KAAzG;AACR,MAAA,QAAQ,EAAEM,CAAC,IAAIC,qBAAqB,CAACD,CAAD;AAD5B;AAAA;AAAA;AAAA;AAAA,YAAR;AAID,GAPD,MAQK,IAAGb,QAAQ,IAAI,QAAf,EACL;AAEEW,IAAAA,KAAK,gBAAG,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,uBAAlB;AACR,MAAA,MAAM,EAAKzB,YADH;AAER,MAAA,OAAO,EAAIkB,IAAI,CAACE,IAFR;AAGR,MAAA,YAAY,EAAEF,IAAI,CAACE,IAAL,CAAU,CAAV;AAHN;AAAA;AAAA;AAAA;AAAA,YAAR;AAMD;;AAED,QAAMY,gBAAgB,GAAG/C,CAAC,CAAE,6BAAF,CAAD,CAAmCgD,GAAnC,EAAzB;AACE,sBACI;AAAA,eACPD,gBADO,eAGA,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACA,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE;AAACE,UAAAA,MAAM,EAAC;AAAR,SAAZ;AAAA,gCAEA,QAAC,eAAD;AAAqB,UAAA,MAAM,EAAKlC,YAAhC;AAAA,iCAEA;AAAO,YAAA,EAAE,EAAG,cAAZ;AAA2B,YAAA,SAAS,EAAC,uBAArC;AAA8D,YAAA,KAAK,EAAE;AAAKmC,cAAAA,MAAM,EAAE,MAAb;AAAqBD,cAAAA,MAAM,EAAE;AAA7B;AAArE;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAOH,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AACA,UAAA,MAAM,EAAKlC,YADX;AAEA,UAAA,YAAY,EAAE;AAAEW,YAAAA,KAAK,EAAE,UAAT;AAAqBC,YAAAA,KAAK,EAAE;AAA5B,WAFd;AAGH,UAAA,OAAO,EAAIF,QAHR;AAIH,UAAA,QAAQ,EAAEiB,CAAC,IAAID,oBAAoB,CAACC,CAAD;AAJhC;AAAA;AAAA;AAAA;AAAA,gBAPG,EAuBPH,IAvBO,EAwBPC,KAxBO;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA,kBADJ;AAmCC;;GAxGMZ,Q;;KAAAA,Q;AA2GT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport $ from 'jquery';\r\n\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    Badge,\r\n    Button,\r\n    Card,\r\n    Navbar,\r\n    Nav,\r\n    Table,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n  } from \"react-bootstrap\";\r\n\r\n\r\n\r\n \r\n\r\n  const customStyles = {\r\n    option: (provided, state) => ({\r\n      ...provided,\r\n      borderBottom: '2px dotted green',\r\n      color: state.isSelected ? 'yellow' : 'black',\r\n      backgroundColor: state.isSelected ? 'green' : 'white'\r\n    }),\r\n    control: (provided) => ({\r\n      ...provided,\r\n      marginTop: \"5%\",\r\n    })\r\n  };\r\n\r\n\r\n\r\n  const options1 = [\r\n    { value: 'National', label: 'National' },\r\n    { value: 'Region', label: 'Region' },\r\n    { value: 'Dealer', label: 'Dealer' }\r\n  ]\r\n\r\n  \r\n  function Dropdown() {\r\n    const [showForm, setShowForm] = useState('false');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [resp, setGitData] = useState({ data: null, repos: null });\r\n    const [selectValue, setSelectValue] = useState('');\r\n\r\n    let comp , comp1;\r\n\r\n    const handleAddrTypeChange = (e) => \r\n  { \r\n    setShowForm((e.value)); \r\n\r\n  }\r\n\r\n  const handleAddrTypeChange1 = (e) => \r\n  { \r\n    setSelectValue((e.value)); \r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchData = async () => {\r\n\r\n      setIsLoading(true);\r\n\r\n      const respGlobal = await axios(\r\n        `https://kmi-salessatisfaction.apprikart.com/secured_api/dashboard_api/get_dealer_list/?username=login1&permission=[%22KIA%22]&start_date=01/01/2021&end_date=30/01/2021&report_type=DCSI`\r\n      );\r\n      const respRepos = await axios(\r\n        `https://kmi-salessatisfaction.apprikart.com/secured_api/dashboard_api/get_region_list/?username=login1&permission=[%22KIA%22]&start_date=01/01/2021&end_date=30/01/2021&report_type=DCSI`\r\n      );\r\n\r\n      setGitData({ data: respGlobal.data, repos: respRepos.data });\r\n      setIsLoading(false);\r\n\r\n    };\r\n\r\n\r\n\r\n    trackPromise(\r\n      fetchData()\r\n    );\r\n\r\n    }, []);\r\n\r\n\r\n\r\n  if (showForm == 'Region') {\r\n  \r\n\r\n    comp =  <Select className=\"col-md-2 col-offset-4\" name=\"anyCustomName\" styles = { customStyles } options = {resp.repos}  \r\n    onChange={e => handleAddrTypeChange1(e)}\r\n    />\r\n\r\n  }\r\n  else if(showForm == 'Dealer')\r\n  {\r\n    \r\n    comp1 = <Select className=\"col-md-2 col-offset-4\"\r\n    styles = { customStyles }\r\n    options = {resp.data} \r\n    defaultValue={resp.data[0]}\r\n\r\n/>\r\n  }\r\n\r\n  const hiddenInputValue = $( \"input[name='anyCustomName']\" ).val();\r\n    return (\r\n        <>\r\n{hiddenInputValue}\r\n\r\n        <Container fluid >\r\n        <Row style={{margin:'1px'}}>\r\n\r\n        <DateRangePicker     styles = { customStyles }\r\n >\r\n        <input id = \"someRandomID\" className=\"col-sm-2 col-offset-4\"  style={{    height: '40px', margin: '10px'}}/>\r\n      </DateRangePicker>\r\n    \r\n     <Select className=\"col-sm-2 col-offset-4\"\r\n     styles = { customStyles }\r\n     defaultValue={{ value: 'National', label: 'National' }}\r\n  options = {options1} \r\n  onChange={e => handleAddrTypeChange(e)}\r\n\r\n\r\n  \r\n  />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{comp}\r\n{comp1}\r\n\r\n</Row>\r\n</Container>\r\n</>\r\n      );\r\n    }\r\n  \r\n  \r\n  export default Dropdown;"]},"metadata":{},"sourceType":"module"}